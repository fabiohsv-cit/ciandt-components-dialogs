/*
 ng-jedi-dialogs v0.0.2
 Dialogs component written in angularjs
 https://github.com/jediproject/ng-jedi-dialogs
*/

!function(a){return"function"!=typeof define?("undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="jedi.dialogs"),a()):void define(["angular"],a)}(function(){"use strict";angular.module("jedi.dialogs.ctrls",[]).controller("jedi.dialogs.AlertCtrl",["$scope","$modalInstance","items",function(a,b,c){a.items=c,a.ok=function(){b.close()}}]).controller("jedi.dialogs.ConfirmCtrl",["$scope","$modalInstance","message",function(a,b,c,d,e){a.message=c,a.ok=function(){b.close()}}]),angular.module("jedi.dialogs",["jedi.dialogs.ctrls"]),angular.module("jedi.dialogs").constant("jedi.dialogs.DialogsConfig",{templateUrlAlert:"assets/libs/ng-jedi-dialogs/dialogs-alert.html",templateUrlConfirm:"assets/libs/ng-jedi-dialogs/dialogs-confirm.html",applyJdi18nToast:!0,alertTitle:"Attention!",confirmTitle:"Attention!",alertOkLabel:"Ok",confirmYesLabel:"Yes",confirmNoLabel:"No"}).factory("jedi.dialogs.AlertHelper",["$injector","jedi.dialogs.DialogsConfig",function(a,b){function c(a){0==h.length&&(e=g.open({templateUrl:b.templateUrlAlert,controller:"jedi.dialogs.AlertCtrl",windowClass:"alert-modal-window",resolve:{items:function(){return h}}}),e.result.then(d,d)),angular.forEach(a,function(a,b){var c=!1;angular.forEach(h,function(b,d){return a.message==b.message?void(c=!0):void 0}),c||h.push(a)})}function d(){h=[],e=null}var e,f,g=a.get("$modal"),h=[];return{confirm:function(a,c,d){f=g.open({templateUrl:b.templateUrlConfirm,controller:"jedi.dialogs.ConfirmCtrl",backdrop:"static",keyboard:!1,windowClass:"alert-modal-window",resolve:{message:function(){return a},onOk:function(){return c},onCancel:function(){return d}}}),f.result.then(function(){f=null,c&&c()},function(){f=null,d&&d()})},addMessages:function(a,b){var d=[];angular.isArray(a)?angular.forEach(a,function(a){d.push({message:a,type:b})}):d.push({message:a,type:b}),c(d)},addInfo:function(a){"string"==typeof a?this.addMessages(a,"text-info"):c(a)},addError:function(a){"string"==typeof a?this.addMessages(a,"text-danger"):c(a)},addWarn:function(a){"string"==typeof a?this.addMessages(a,"text-dangerwarning"):c(a)},close:function(){e&&e.close(),f&&f.close()}}}]).factory("jedi.dialogs.Modal",[function(){function a(a){this.instance=a}return a.prototype.open=function(){return this.instance.open.apply(this.instance.open,arguments)},a.prototype.close=function(){return this.instance.close.apply(this.instance.close,arguments)},a.prototype.dismiss=function(){return this.instance.dismiss.apply(this.instance.dismiss,arguments)},a.prototype.getResult=function(){return this.instance.result},a}]).factory("jedi.dialogs.ModalHelper",["jedi.dialogs.Modal","$injector","$log",function(a,b,c){var d=b.get("$modal"),e=[],f="destroy";return{open:function(b){var c,g,h,i,j,k=0;arguments.length>1&&("string"==typeof arguments[1]||_.isArray(arguments[1]))&&(c=arguments[1],k++),arguments.length>1+k&&("undefined"==typeof arguments[k+1]||"object"==typeof arguments[k+1])&&(g=arguments[k+1],k++),arguments.length>1+k&&("undefined"==typeof arguments[k+1]||"function"==typeof arguments[k+1])&&(h=arguments[k+1],k++),arguments.length>1+k&&("undefined"==typeof arguments[k+1]||"function"==typeof arguments[k+1])&&(i=arguments[k+1],k++),arguments.length>1+k&&(j=arguments[k+1]);var l=["$scope"],m={};angular.forEach(g,function(a,b){l.push(b),"function"!=typeof a?m[b]=function(){return a}:m[b]=a}),!c&&g&&(l.push(function(a){var b=arguments,c=1;angular.forEach(g,function(d,e){a[e]=b[c],c++})}),c=l);var n=c&&!_.isArray(c)?c.split(/[. ]+/).pop():void 0;n&&(n=n.charAt(0).toLowerCase()+n.slice(1));var o={templateUrl:b,controller:c,controllerAs:n,backdrop:"static",resolve:m};j=j?angular.extend(o,j):o;var p=new a(d.open(j));return e.push(p),p.getResult().then(function(){e=_.filter(e,function(a){return a!==p}),!h||1==arguments.length&&arguments[0]===f||h.apply(h,arguments)},function(){e=_.filter(e,function(a){return a!==p}),!i||1==arguments.length&&arguments[0]===f||i.apply(i,arguments)}),p},closeAll:function(){angular.forEach(e,function(a){a.dismiss(f)})}}}]).run(["$templateCache","jedi.dialogs.DialogsConfig",function(a,b){b.applyJdi18nToast&&a.put("directives/toast/toast.html",'<div class="{{toastClass}} {{toastType}}" ng-click="tapToast()">\n  <div ng-switch on="allowHtml">\n    <div ng-switch-default ng-if="title" class="{{titleClass}}" jd-i18n>{{title}}</div>\n    <div ng-switch-default class="{{messageClass}}" jd-i18n>{{message}}</div>\n    <div ng-switch-when="true" ng-if="title" class="{{titleClass}}" ng-bind-html="title"></div>\n    <div ng-switch-when="true" class="{{messageClass}}" ng-bind-html="message"></div>\n  </div>\n  <progress-bar ng-if="progressBar"></progress-bar>\n</div>\n'),a.put("assets/libs/ng-jedi-dialogs/dialogs-alert.html",'<div jd-modal jd-title="'+b.alertTitle+'">    <ul class="alert-message">        <li class="{{ item.type }}" ng-repeat="item in items" jd-i18n>{{ item.message }}</li>    </ul>    <div class="modal-footer">        <button class="btn btn-primary" ng-click="ok()" jd-i18n>'+b.alertOkLabel+"</button>    </div></div>"),a.put("assets/libs/ng-jedi-dialogs/dialogs-confirm.html",'<div jd-modal jd-title="'+b.confirmTitle+'" jd-hide-close-btn>    <p class="text-info alert-message" jd-i18n>{{message}}</p>    <div class="modal-footer">        <button class="btn btn-primary" ng-click="ok()" jd-i18n>'+b.confirmYesLabel+'</button>        <button class="btn btn-primary" jd-dismiss-modal jd-i18n>'+b.confirmNoLabel+"</button>    </div></div>")}])});
//# sourceMappingURL=dialogs.min.map